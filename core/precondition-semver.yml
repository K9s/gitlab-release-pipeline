.bump_base:
  stage: precondition
  extends:
    - .rp_base
  when: manual
  cache: []
  script: |
    #### SemVer Bump ####
    set -e
    
    cd ${DIR}
    export RP_BUMP=$(echo ${CI_JOB_NAME} | cut -d ':' -f 2)
    export RP_SEMVER_BUILD_REF=BUILD
    unset SEMVER
    ${CI_PROJECT_DIR}/release.sh check
    TAG_PREFIX=$(${CI_PROJECT_DIR}/release.py get-tag-prefix)
    BUMP_VERSION=$(${CI_PROJECT_DIR}/release.py get)
    echo "${BUMP} Bumping to ${BUMP_VERSION}..."
    git tag -f bump-${TAG_PREFIX}${BUMP_VERSION}
    git push -f origin bump-${TAG_PREFIX}${BUMP_VERSION}
    echo "VERSION_BUMPED=${BUMP_VERSION}" > ${CI_JOB_NAME}.env
    CANCEL_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/pipelines/${CI_PIPELINE_ID}/cancel"
    echo "Successfully bumped to version ${BUMP_VERSION}. Cancelling current pipeline (${CI_PIPELINE_ID}) in 15 seconds..."
    sleep 15
    curl --request POST --header "PRIVATE-TOKEN: ${RELEASE_PASS}" "${CANCEL_URL}"
  artifacts:
    reports:
      dotenv: $DIR/$CI_JOB_NAME.env
  needs:
    - job: 'set:version'
      optional: true
  resource_group: $APP-release

bump:patch:
  extends: .bump_base
  rules:
    - if: $RP_SEMVER_BUMP_JOBS_DISABLED
      when: never
    - if: $RP_RELEASE_BRANCH == $CI_COMMIT_REF_NAME
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME =~ /^hotfix\/.*$/
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME =~ /^fix\/.*$/
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

bump:minor:
  extends: .bump_base
  rules:
    - if: $RP_SEMVER_BUMP_JOBS_DISABLED
      when: never
    - if: $RP_RELEASE_BRANCH == $CI_COMMIT_REF_NAME
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME =~ /^fix\/.*$/
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

bump:major:
  extends: .bump_base
  rules:
    - if: $RP_SEMVER_BUMP_JOBS_DISABLED
      when: never
    - if: $RP_RELEASE_BRANCH == $CI_COMMIT_REF_NAME
    - if: $RP_RELEASE_BRANCH == null && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
