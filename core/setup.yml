include:
  - local: core/.rp_base.yml
  - local: core/.rules.yml
  - local: core/.gate_base.yml
  - local: core/.base.yml
  - local: core/.set_version.yml

pull:setup:artifacts:
  script:
    - echo "Pulling artifacts from parent pipeline ${RP_PARENT_PIPELINE_ID}"
  stage: .pre
  needs:
    pipeline: $RP_PARENT_PIPELINE_ID
    job: publish:scripts
  rules:
    - if: $RP_PARENT_PIPELINE_ID
  artifacts:
    paths:
      - .config/*
      - semver.py
      - release.sh

gate:precondition:check:
  stage: prebuild
  extends:
    - .rp_base
  script: | 
    #!/usr/bin/env bash
    set -e
    
    fail_job=0
    
    echo "‚≠ê  Checking for required environment variables  ‚≠ê "
    required_envars=( TAG DESCRIPTION APP VERSION BUILD RELEASE_SEMVER )
    for var in "${required_envars[@]}"
    do
      value=$(eval echo \${"$var"})
      if [[ -z $value ]]; then
        echo "   ‚õî  ${var}"
        fail_job=1
      else
        echo "   ‚úÖ  ${var}=${value}"
      fi
    done
    
    echo "üí´  Checking for recommended environment variables  üí´ "
    recommended_envars=( VERSION_PATCH VERSION_MINOR VERSION_MAJOR VERSION_CODE CURRENT_VERSION )
    for var in "${recommended_envars[@]}"
    do
      value=$(eval echo \${"$var"})
      if [[ -z $value ]]; then
        echo "   ‚ö†Ô∏è  ${var}"
      else
        echo "   ‚úÖ  ${var}=${value}"
      fi
    done
    
    if [[ $fail_job != 0 ]]; then
      echo "‚õî One or more ‚≠ê required‚≠ê  ENVARs are unset, failing job ‚õî "
    else
      echo "‚úÖ Everything looks go to üöÄ "
    fi
    exit $fail_job

set:stable:tag:
  extends:
    - .rp_base
  stage: postrelease
  cache: []
  script: |
    #### Setting stable tag ####
    set -e
    cd ${DIR}
    export RP_BUMP=build
    export RP_IGNORE_ALREADY_TAGGED=True
    export RP_SEMVER_BUILD_REF=BUILD
    ${CI_PROJECT_DIR}/release.sh check
    git tag -f ${APP}-stable
    git tag -f ${APP}-${VERSION_MAJOR}-stable
    git tag -f ${APP}-${VERSION_MAJOR}.${VERSION_MINOR}-stable
    git push --delete origin ${APP}-stable || true
    git push --delete origin ${APP}-${VERSION_MAJOR}-stable || true
    git push --delete origin ${APP}-${VERSION_MAJOR}.${VERSION_MINOR}-stable || true
    git push -f origin ${APP}-stable
    git push -f origin ${APP}-${VERSION_MAJOR}-stable
    git push -f origin ${APP}-${VERSION_MAJOR}.${VERSION_MINOR}-stable
  rules:
    - !reference [.release_rules, rules]
  resource_group: $APP-release
  needs:
    - job: 'gitlab:release'
    - job: 'publish:candidate'
      optional: true
    - job: 'set:version'

set:version:
  extends:
   - .set:version
