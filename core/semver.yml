.semver:
  stage: semver
  extends: .setup_base
  when: manual
  cache: []
  script:
    - cd $DIR
    - export ALLOWED_RELEASE_BRANCH=$CI_COMMIT_REF_NAME
    - $CI_PROJECT_DIR/release.sh $CI_JOB_NAME
    - echo "VERSION_BUMPED=true" > $CI_JOB_NAME.env
    - URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/cancel"
    - echo "Cancelling current pipeline ($CI_PIPELINE_ID) in 15 seconds..."
    - sleep 15
    - 'curl --request POST --header "PRIVATE-TOKEN: $RELEASE_PASS" "$URL"'
  artifacts:
    reports:
      dotenv: $DIR/$CI_JOB_NAME.env
  needs:
    - job: 'get:version'
      artifacts: true
  resource_group: $APP-release

patch:
  extends: .semver
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^hotfix\/.*$/
    - if: $CI_COMMIT_REF_NAME =~ /^fix\/.*$/
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

minor:
  extends: .semver
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^fix\/.*$/
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

major:
  extends: .semver
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

semver:patch:
  extends:
    - .setup_base
  stage: prod publish
  cache: []
  script:
    - cd $DIR
    - export ALLOWED_RELEASE_BRANCH=$CI_COMMIT_REF_NAME
    - $CI_PROJECT_DIR/release.sh patch
    - git tag -f $APP-stable
    - git push --delete origin $APP-stable || true
    - git push -f origin $APP-stable
  rules:
    - !reference [.release_rules, rules]
  needs:
    - job: 'gitlab:release'
      artifacts: true
    - job: 'publish:release'
      artifacts: true
    - job: 'get:version'
      artifacts: true
  resource_group: $APP-release
