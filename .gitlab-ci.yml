workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_BRANCH
      changes:
        - .gitlab-ci.yml
        - .config/*
        - Dockerfile
        - requirements.txt
        - semver.py
        - release.sh
        - core/**/*
        - templates/**/*

include:
  - local: core/stages.yml
  - local: core/.rp_base.yml
  - local: core/.rules.yml
#  - local: core/test.yml
  - local: templates/bases/python.yml

default:
  tags:
   - dind-nosock

.base:
  extends:
    - .rp_base

variables:
  APP: release-pipeline
  DIR: .
  RP_TEMPLATE_PROJECT_ID: $CI_PROJECT_ID
  RP_ENABLE_CONTINUOUS_DEPLOYMENT: 'true'
  RP_PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  EXTENDED_PIPELINE_INTEGRATIONS: 'true'
  RP_IMAGE_TAG: $RP_IMAGE_TAG

.pipeline_integration_base:
  stage: integration

.child-pipeline:
  rules:
    - if: $RP_LATEST_TAGGED_ANCESTOR_IS_IGNORED
      variables:
        RP_LATEST_TAGGED_ANCESTOR_IS_IGNORED: $RP_LATEST_TAGGED_ANCESTOR_IS_IGNORED
        VERSION: $VERSION
        RP_BUMP: $RP_BUMP
    - if: $VERSION || $RP_BUMP
      variables:
        VERSION: $VERSION
        RP_BUMP: $RP_BUMP

base-image:
  stage: build
  variables:
    APP: base-image
    DIR: .
    VERSION: $VERSION
    RP_BUMP: $RP_BUMP
  trigger:
    include:
      - local: .gitlab-ci-base-image.yml
    strategy: depend
  needs:
    - 'publish:scripts'
  rules:
    - !reference [ .child-pipeline, rules ]
    - if: $CI_COMMIT_BRANCH
      changes:
        - Dockerfile
        - requirements.txt

core:
  extends:
    - .pipeline_integration_base
  variables:
    APP: core
    DIR: validation_pipelines/core/src
    VERSION: $VERSION
    RP_BUMP: $RP_BUMP
  trigger:
    include:
      - local: validation_pipelines/core/.gitlab-ci.yml
    strategy: depend
  rules:
    - !reference [.child-pipeline, rules]

docker-python:
  extends:
    - .pipeline_integration_base
  variables:
    APP: docker-python
    DIR: validation_pipelines/docker-python/src
    VERSION: $VERSION
    RP_BUMP: $RP_BUMP
  trigger:
    include:
      - local: validation_pipelines/docker-python/.gitlab-ci.yml
    strategy: depend
  rules:
    - !reference [.child-pipeline, rules]

package-python:
  extends:
    - .pipeline_integration_base
  variables:
    APP: package-python
    DIR: validation_pipelines/package-python/src
    VERSION: $VERSION
    RP_BUMP: $RP_BUMP
  trigger:
    include:
     - local: validation_pipelines/package-python/.gitlab-ci.yml
    strategy: depend
  rules:
    - !reference [.child-pipeline, rules]
    - if: $EXTENDED_PIPELINE_INTEGRATIONS

script-python:
  extends:
    - .pipeline_integration_base
  variables:
    APP: script-python
    DIR: validation_pipelines/script-python/src
    RP_BUMP: $RP_BUMP
  trigger:
    include:
      - local: validation_pipelines/script-python/.gitlab-ci.yml
    strategy: depend
  rules:
    - !reference [.child-pipeline, rules]
    - if: $EXTENDED_PIPELINE_INTEGRATIONS

publish:scripts:
  stage: build
  script:
    - echo 'Publishing release scripts'
    - echo "CI_COMMIT_SHA=${CI_COMMIT_SHA}" > .config/pipeline.release
    - echo "CI_PIPELINE_URL=${CI_PIPELINE_URL}" >> .config/pipeline.release
  artifacts:
    paths:
      - .config/*
      - semver.py
      - release.sh

set:stable:tag:
  extends: .rp_base
  stage: postrelease
  script: |
    #### Setting stable tag ####
    ./release.sh check
    git tag -f stable
    git push --delete origin stable || true
    git push -f origin stable
  rules:
    - !reference [.release_rules, rules]
